{"version":3,"file":"component---src-pages-glossary-index-js-d240e288b67b39447c4e.js","mappings":"gHAAA,IAAIA,EAAQ,EAAQ,MACpBC,EAAOC,QAAUC,EACjB,IAAIC,EAAMC,OAAOC,eACbC,EAAa,MACbC,EAAW,iEACf,SAASL,IAEP,KADWM,gBACWN,GAAa,OAAO,IAAIA,EADnCM,KAENC,OACP,CA2BA,SAASC,EAAQC,EAAQC,GACvB,MAAsB,iBAAXD,EAA4B,IAClCC,IAAcD,EAASA,EAAOE,eAC5BF,EAAOG,OAAOC,QAAQR,EAAU,IAAIQ,QAAQhB,IAAS,IAAIgB,QAAQT,EAAY,KACtF,CAvBAJ,EAAWc,UAAUC,KAAO,SAAUC,EAAON,GAI3C,IAHA,IAAIO,EAAOX,KACPS,EAAOP,EAAQQ,GAAwB,IAAjBN,GACtBQ,EAAeH,EACZd,EAAIkB,KAAKF,EAAKG,YAAaL,IAChCE,EAAKG,YAAYF,KACjBH,EAAOG,EAAe,IAAMD,EAAKG,YAAYF,GAG/C,OADAD,EAAKG,YAAYL,GAAQ,EAClBA,CACT,EAMAf,EAAWc,UAAUP,MAAQ,WAC3BD,KAAKc,YAAclB,OAAOmB,OAAO,KACnC,EAMArB,EAAWe,KAAOP,C,mBCzClBV,EAAOC,QAAU,WACf,MAAO,6zFACT,C,6HCOMuB,EAAU,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,MAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAA,IAAAI,EAAAL,EAAAR,UA0Eb,OA1Eaa,EACdZ,KAAA,SAAKC,GACH,OAAO,IAAIY,MAAUb,KAAKC,EAC5B,EAACW,EAEDE,OAAA,WAAU,IAADC,EAAA,KACCC,EAAUzB,KAAK0B,MAAMC,KAAKC,kBAA1BH,MAEFI,EAAoB,CAAC,EAE3BJ,EAAMK,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAcF,EAAKG,KAAKC,YAAYC,MAAMC,OAAO,GAEjBC,MAAlCT,EAAkBI,KACpBJ,EAAkBI,GAAe,IAGnCJ,EAAkBI,GAAaM,KAAKR,EACtC,IAEA,IAAMS,EAAa5C,OAAO6C,KAAKZ,GAE/B,OACEa,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAACE,EAAAA,EAAM,CAACR,MAAK,cAAgBS,IAAAA,aAA0BT,QACvDM,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,OAAKC,UAAU,iBACZH,EAAWV,KAAI,SAACgB,EAAQd,GACvB,OACEU,EAAAA,cAAA,OAAKC,UAAU,mBAAmBI,IAAKf,GACrCU,EAAAA,cAAA,MAAIC,UAAU,yCACXG,GAEHJ,EAAAA,cAAA,MAAIC,UAAU,yCACXd,EAAkBiB,GAAQhB,KAAI,SAACC,EAAMC,GACpC,OACEU,EAAAA,cAAA,MAAIC,UAAU,gBAAgBI,IAAKf,GACjCU,EAAAA,cAAA,KACEM,KAAI,IAAMxB,EAAKf,KACbsB,EAAKG,KAAKC,YAAYC,QAGvBL,EAAKG,KAAKC,YAAYC,OAI/B,KAIR,OAKNM,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,UAAI,YACHjB,EAAMK,KAAI,SAACC,EAAMC,GAChB,OACEU,EAAAA,cAAA,OACEC,UAAU,oBACVI,IAAKhB,EAAKG,KAAKC,YAAYC,OAE3BM,EAAAA,cAAA,MAAIO,GAAIzB,EAAKf,KAAKsB,EAAKG,KAAKC,YAAYC,QACrCL,EAAKG,KAAKC,YAAYC,OAEzBM,EAAAA,cAAA,OAAKQ,wBAAyB,CAAEC,OAAQpB,EAAKG,KAAKkB,QAGxD,KAIR,EAACpC,CAAA,CA1Ea,CAAS0B,EAAAA,WA6EzB,W","sources":["webpack://docs.hackerone.com/./node_modules/github-slugger/index.js","webpack://docs.hackerone.com/./node_modules/github-slugger/node_modules/emoji-regex/index.js","webpack://docs.hackerone.com/./src/pages/glossary/index.js"],"sourcesContent":["var emoji = require('emoji-regex');\nmodule.exports = BananaSlug;\nvar own = Object.hasOwnProperty;\nvar whitespace = /\\s/g;\nvar specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~â€™]/g;\nfunction BananaSlug() {\n  var self = this;\n  if (!(self instanceof BananaSlug)) return new BananaSlug();\n  self.reset();\n}\n\n/**\r\n * Generate a unique slug.\r\n * @param  {string} value String of text to slugify\r\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\r\n * @return {string}       A unique slug string\r\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  var self = this;\n  var slug = slugger(value, maintainCase === true);\n  var originalSlug = slug;\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++;\n    slug = originalSlug + '-' + self.occurrences[originalSlug];\n  }\n  self.occurrences[slug] = 0;\n  return slug;\n};\n\n/**\r\n * Reset - Forget all previous slugs\r\n * @return void\r\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null);\n};\nfunction slugger(string, maintainCase) {\n  if (typeof string !== 'string') return '';\n  if (!maintainCase) string = string.toLowerCase();\n  return string.trim().replace(specials, '').replace(emoji(), '').replace(whitespace, '-');\n}\nBananaSlug.slug = slugger;","module.exports = function () {\n  return /[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uD83C\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uD83C\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uD83C\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF8\\uDDFE\\uDDFF]|\\uD83C\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uD83C\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uD83C\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uD83C\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uD83C\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uD83C\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uD83C\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uD83C\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uD83C\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uD83C\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uD83C\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uD83C\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uD83C\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uD83C\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|[#\\*0-9]\\u20E3/g;\n};","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Link from \"gatsby-link\";\nimport GatsbyConfig from \"../../../gatsby-config\";\nimport { graphql } from \"gatsby\";\nimport Slugger from \"github-slugger\";\n\nimport \"./glossary.scss\";\n\nclass IndexRoute extends React.Component {\n  slug(value) {\n    return new Slugger().slug(value);\n  }\n\n  render() {\n    const { edges } = this.props.data.allMarkdownRemark;\n\n    const groupedByAlphabet = {};\n\n    edges.map((item, index) => {\n      const firstLetter = item.node.frontmatter.title.charAt(0);\n\n      if (groupedByAlphabet[firstLetter] == undefined) {\n        groupedByAlphabet[firstLetter] = [];\n      }\n\n      groupedByAlphabet[firstLetter].push(item);\n    });\n\n    const allLetters = Object.keys(groupedByAlphabet);\n\n    return (\n      <div className=\"glossary article\">\n        <Helmet title={`Glossary | ${GatsbyConfig.siteMetadata.title}`} />\n        <div className=\"sidebar\">\n          <div className=\"sidebar__wrapper\">\n            <div className=\"sidebar__body\">\n              {allLetters.map((letter, index) => {\n                return (\n                  <div className=\"sidebar__section\" key={index}>\n                    <h3 className=\"sidebar__title sidebar__title--active\">\n                      {letter}\n                    </h3>\n                    <ul className=\"sidebar__items sidebar__items--active\">\n                      {groupedByAlphabet[letter].map((item, index) => {\n                        return (\n                          <li className=\"sidebar__item\" key={index}>\n                            <a\n                              href={`#${this.slug(\n                                item.node.frontmatter.title\n                              )}`}\n                            >\n                              {item.node.frontmatter.title}\n                            </a>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"article__inner\">\n          <h1>Glossary</h1>\n          {edges.map((item, index) => {\n            return (\n              <div\n                className=\"glossary__wrapper\"\n                key={item.node.frontmatter.title}\n              >\n                <h2 id={this.slug(item.node.frontmatter.title)}>\n                  {item.node.frontmatter.title}\n                </h2>\n                <div dangerouslySetInnerHTML={{ __html: item.node.html }} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IndexRoute;\n\nexport const pageQuery = graphql`\n  query glossaryIndexQuery {\n    allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/glossary/\" } } }\n      sort: { order: ASC, fields: [frontmatter___title] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["emoji","module","exports","BananaSlug","own","Object","hasOwnProperty","whitespace","specials","this","reset","slugger","string","maintainCase","toLowerCase","trim","replace","prototype","slug","value","self","originalSlug","call","occurrences","create","IndexRoute","_React$Component","apply","arguments","_inheritsLoose","_proto","Slugger","render","_this","edges","props","data","allMarkdownRemark","groupedByAlphabet","map","item","index","firstLetter","node","frontmatter","title","charAt","undefined","push","allLetters","keys","React","className","Helmet","GatsbyConfig","letter","key","href","id","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}